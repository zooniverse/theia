apiVersion: v1
data:
  nginx.conf: |+
    upstream docker-theia {
      server localhost:81;
    }

    server {
      server_name theia.zooniverse.org
      include /etc/nginx/ssl.default.conf;
      gzip_types *;

      location = /commit_id.txt {
        root /static-assets/;
        expires off;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Credentials' 'true';
      }

      location ~ ^/static/(.*)$ {
        alias /static-assets/$1;
        gzip_static on; # to serve pre-gzipped version
        expires max;
        add_header Cache-Control public;
      }

      location = /favicon.ico {
        root /static-assets/;
        expires max;
        add_header Cache-Control public;
      }

      location = /robots.txt {
        root /static-assets/;
        expires max;
        add_header Cache-Control public;
      }

      location / {
        proxy_pass http://docker-theia;
        proxy_set_header Host theia.zooniverse.org;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: theia-nginx-conf-production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: theia-production-app
  labels:
    app: theia-production-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: theia-production-app
  template:
    metadata:
      labels:
        app: theia-production-app
    spec:
      containers:
        - name: theia-production-app
          image: ghcr.io/zooniverse/theia:__IMAGE_TAG__
          resources:
            requests:
              memory: "200Mi"
              cpu: "10m"
            limits:
              memory: "200Mi"
              cpu: "500m"
          envFrom:
          - secretRef:
              name: theia-production-env-vars
          env:
          - name: PANOPTES_URL
            value: https://panoptes.zooniverse.org/
          - name: DJANGO_ENV
            value: production
          - name: DJANGO_ALLOWED_HOSTS
            value: theia.zooniverse.org
          - name: CELERY_REDIS_URL
            value: 'redis://theia-production-redis:6379/0'
          - name: MAGICK_CONFIGURE_PATH
            value: '/usr/src/app/.magick'
          volumeMounts:
            - name: theia-production-volume
              mountPath: "/usr/src/app/tmp"
            - name: static-assets
              mountPath: "/static-assets"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "cp -R /usr/src/app/theia/static/* /static-assets"]
        - name: theia-production-nginx
          image: zooniverse/nginx:1.19.0
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "25Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                 - name: X-Forwarded-Proto
                   value: https
                 - name: Host
                   value: theia.zooniverse.org
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                 - name: X-Forwarded-Proto
                   value: https
                 - name: Host
                   value: theia.zooniverse.org
            initialDelaySeconds: 10
          lifecycle:
            preStop:
              exec:
                # SIGTERM triggers a quick exit; gracefully terminate instead
                command: ["/usr/sbin/nginx","-s","quit"]
          volumeMounts:
            - name: static-assets
              mountPath: "/static-assets"
            - name: theia-nginx-config
              mountPath: "/etc/nginx-sites"
      volumes:
        - name: theia-production-volume
          persistentVolumeClaim:
            claimName: theia-production-data-storage
        - name: static-assets
          hostPath:
            # directory location on host node temp disk
            path: /mnt/theia-production-app-static-assets
            type: DirectoryOrCreate
        - name: theia-nginx-config
          configMap:
            name: theia-nginx-conf-production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: theia-production-worker
  labels:
    app: theia-production-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: theia-production-worker
  template:
    metadata:
      labels:
        app: theia-production-worker
    spec:
      containers:
        - name: theia-production-worker
          image: ghcr.io/zooniverse/theia:__IMAGE_TAG__
          resources:
            requests:
              memory: "200Mi"
              cpu: "10m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
          envFrom:
          - secretRef:
              name: theia-production-env-vars
          args: ["/usr/src/app/start_worker.sh"]
          env:
          - name: PANOPTES_URL
            value: https://panoptes.zooniverse.org/
          - name: DJANGO_ENV
            value: production
          - name: DJANGO_ALLOWED_HOSTS
            value: theia.zooniverse.org
          - name: CELERY_REDIS_URL
            value: 'redis://theia-production-redis:6379/0'
          - name: MAGICK_CONFIGURE_PATH
            value: '/usr/src/app/.magick'
          volumeMounts:
            - name: theia-production-volume
              mountPath: "/usr/src/app/tmp"
      volumes:
        - name: theia-production-volume
          persistentVolumeClaim:
            claimName: theia-production-data-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: theia-production-redis
  labels:
    app: theia-production-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: theia-production-redis
  template:
    metadata:
      labels:
        app: theia-production-redis
    spec:
      tolerations:
      - key: "servicelife"
        operator: "Equal"
        value: "longlife"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: servicelife
                operator: In
                values:
                - longlife
      containers:
        - name: theia-production-redis
          image: redis
          resources:
            requests:
              memory: "10Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
          volumeMounts:
          - name: theia-production-redis-data
            mountPath: "/data"
      volumes:
      - name: theia-production-redis-data
        persistentVolumeClaim:
          claimName: theia-production-redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: theia-production-redis
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: theia-production-data-storage
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 15Gi
---
apiVersion: v1
kind: Service
metadata:
  name: theia-production-redis
spec:
  selector:
    app: theia-production-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: theia-production-app
spec:
  selector:
    app: theia-production-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---